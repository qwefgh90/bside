{"version":3,"sources":["./node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACa;AACN;AACP;AACA,iEAAiE,IAAI,MAAM;AAC3E;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA,SAAS,SAAS,YAAY,GAAG;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,2CAA2C;AACpD,SAAS,wDAAwD;AACjE;AACA;AACA,SAAS,SAAS,YAAY,GAAG;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,SAAS,mCAAmC,YAAY,GAAG;AAC3D,SAAS,mDAAmD;AAC5D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,8CAA8C,IAAI,cAAc,EAAE,cAAc,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qCAAqC;AACrC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iCAAiC,mCAAmC;AACpE;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iCAAiC,0CAA0C;AAC3E;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iCAAiC,kDAAkD;AACnF;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mCAAmC,qCAAqC;AACxE,qCAAqC;AACrC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,oCAAoC,gCAAgC;AACpE;AACA;AACA,yCAAyC,mCAAmC;AAC5E;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oCAAoC,gCAAgC;AACpE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,2CAA2C,8BAA8B;AACzE;AACA;AACA,KAAK;AACL","file":"powershell-js.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    // the default separators except `$-`\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '#',\r\n        blockComment: ['<#', '#>'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.ps1',\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.square', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\r\n    ],\r\n    keywords: [\r\n        'begin', 'break', 'catch', 'class', 'continue', 'data',\r\n        'define', 'do', 'dynamicparam', 'else', 'elseif', 'end',\r\n        'exit', 'filter', 'finally', 'for', 'foreach', 'from',\r\n        'function', 'if', 'in', 'param', 'process', 'return',\r\n        'switch', 'throw', 'trap', 'try', 'until', 'using',\r\n        'var', 'while', 'workflow', 'parallel', 'sequence', 'inlinescript', 'configuration'\r\n    ],\r\n    helpKeywords: /SYNOPSIS|DESCRIPTION|PARAMETER|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|ROLE|FUNCTIONALITY|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP/,\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?&%|+\\-*\\/\\^;\\.,]+/,\r\n    escapes: /`(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // commands and keywords\r\n            [/[a-zA-Z_][\\w-]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            // labels\r\n            [/^:\\w*/, 'metatag'],\r\n            // variables\r\n            [/\\$(\\{((global|local|private|script|using):)?[\\w]+\\}|((global|local|private|script|using):)?[\\w]+)/, 'variable'],\r\n            // Comments\r\n            [/<#/, 'comment', '@comment'],\r\n            [/#.*$/, 'comment'],\r\n            // delimiters\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\r\n            [/\\d+?/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings:\r\n            [/\\@\"/, 'string', '@herestring.\"'],\r\n            [/\\@'/, 'string', '@herestring.\\''],\r\n            [/\"/, {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\"' }\r\n                    }\r\n                }],\r\n            [/'/, {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\\'' }\r\n                    }\r\n                }],\r\n        ],\r\n        string: [\r\n            [/[^\"'\\$`]+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/@escapes/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape', next: '@popall' },\r\n                        '@default': 'string.escape'\r\n                    }\r\n                }],\r\n            [/`./, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\r\n                        '@default': 'string.escape.invalid'\r\n                    }\r\n                }],\r\n            [/\\$[\\w]+$/, {\r\n                    cases: {\r\n                        '$S2==\"': { token: 'variable', next: '@popall' },\r\n                        '@default': { token: 'string', next: '@popall' }\r\n                    }\r\n                }],\r\n            [/\\$[\\w]+/, {\r\n                    cases: {\r\n                        '$S2==\"': 'variable',\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': {\r\n                            cases: {\r\n                                '@eos': { token: 'string', next: '@popall' },\r\n                                '@default': 'string'\r\n                            }\r\n                        }\r\n                    }\r\n                }],\r\n        ],\r\n        herestring: [\r\n            [/^\\s*([\"'])@/, {\r\n                    cases: {\r\n                        '$1==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/[^\\$`]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/`./, 'string.escape.invalid'],\r\n            [/\\$[\\w]+/, {\r\n                    cases: {\r\n                        '$S2==\"': 'variable',\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n        ],\r\n        comment: [\r\n            [/[^#\\.]+/, 'comment'],\r\n            [/#>/, 'comment', '@pop'],\r\n            [/(\\.)(@helpKeywords)(?!\\w)/, { token: 'comment.keyword.$2' }],\r\n            [/[\\.#]/, 'comment']\r\n        ],\r\n    },\r\n};\r\n"],"sourceRoot":"webpack:///"}