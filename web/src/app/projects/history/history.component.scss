@import '~@angular/material/theming';

@import '../../../theme.scss';

// Define a custom mixin that takes in the current theme
@mixin custom-style($theme) {
    // Parse the theme and create variables for each color in the pallete
    $primary: map-get($theme, primary);
    $accent: map-get($theme, accent);
    $warn: map-get($theme, warn);
    $foreground: map-get($theme, foreground);
    $background: map-get($theme, background);
    // Create theme specfic styles

    .repos{
        flex: 0.1 0 auto;
        display: inline-block;
        text-align: left;
        height: 100%;
    }

    .custom-sub-header{
        display:flex;
        padding: 0 16px;
    }
    .mat-list-base .mat-subheader:first-child{
        background-color:  mat-color($primary, default-contrast);
    }
  }
  
  @include custom-style($my-theme);

.repos-outer{
    top: 72px;
    bottom: 64px;
    left: 0;
    right: 0;
    padding-top: 1em; 
    padding-bottom: 1em; 
    text-align: center;
    display: flex;
}
.mat-list-item-content{
    cursor: pointer
}
.items{
    overflow-y: scroll;
    height: 100%;
}
.mat-nav-list{
    overflow-y: hidden;
    height: 100%;
    flex-direction: column;
    display: flex;
}

.mat-list-base{
    padding-top: 0;
}
.spacer{
    flex-grow: 1;
}
.filter{
    flex: 0.8;
}

.mat-form-field{
    width: 100%;
}
.progress-box{
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}
::ng-deep .mat-form-field-infix{
    width: 100% !important; 
}
